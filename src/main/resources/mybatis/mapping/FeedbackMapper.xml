<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.FeedBack">
    <!--@mbg.generated-->
    <id column="feedback_id" jdbcType="INTEGER" property="feedbackId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="feedback_context" jdbcType="VARCHAR" property="feedbackContext" />
  </resultMap>
  <resultMap id="LinkResultMap" type="com.example.demo.model.FeedBack">
    <!--@mbg.generated-->
    <id column="feedback_id" jdbcType="INTEGER" property="feedbackId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="feedback_context" jdbcType="VARCHAR" property="feedbackContext" />
    <collection property="feedBackImages" ofType="FeedBackImage"
                resultMap="com.example.demo.mapper.FeedbackImageMapper.BaseResultMap" column="feedback_id"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    feedback_id, user_id, product_id, feedback_context
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.FeedbackExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectLinkByFeedBackId" parameterType="java.lang.Integer" resultMap="LinkResultMap">
    select tb_feedback.*, tb_feedback_image.*
    from tb_feedback join tb_feedback_image on tb_feedback.feedback_id = tb_feedback_image.feedback_id
    where tb_feedback.feedback_id = #{UserId,jdbcType=INTEGER} ;
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from tb_feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from tb_feedback
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.FeedbackExample">
    <!--@mbg.generated-->
    delete from tb_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="feedback_id" keyProperty="feedbackId" parameterType="com.example.demo.model.FeedBack" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into tb_feedback (user_id, product_id, feedback_context
      )
    values (#{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{feedbackContext,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="feedback_id" keyProperty="feedbackId" parameterType="com.example.demo.model.FeedBack" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into tb_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="feedbackContext != null">
        feedback_context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="feedbackContext != null">
        #{feedbackContext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.FeedbackExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from tb_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update tb_feedback
    <set>
      <if test="record.feedbackId != null">
        feedback_id = #{record.feedbackId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.feedbackContext != null">
        feedback_context = #{record.feedbackContext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update tb_feedback
    set feedback_id = #{record.feedbackId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      feedback_context = #{record.feedbackContext,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.FeedBack">
    <!--@mbg.generated-->
    update tb_feedback
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="feedbackContext != null">
        feedback_context = #{feedbackContext,jdbcType=VARCHAR},
      </if>
    </set>
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.FeedBack">
    <!--@mbg.generated-->
    update tb_feedback
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      feedback_context = #{feedbackContext,jdbcType=VARCHAR}
    where feedback_id = #{feedbackId,jdbcType=INTEGER}
  </update>
</mapper>