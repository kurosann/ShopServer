<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_nike" property="userNike" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_money" property="userMoney" jdbcType="REAL" />
    <result column="user_head_icon" property="userHeadIcon" jdbcType="VARCHAR" />
    <result column="user_default_address_id" property="userDefaultAddressId" jdbcType="INTEGER" />
    <collection property="feedBacks" ofType="FeedBack"
                resultMap="com.example.demo.mapper.FeedbackMapper.LinkResultMap" column="user_id"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, user_nike, user_password, user_email, user_phone, user_money, 
    user_head_icon, user_default_address_id
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.UserExample" resultMap="BaseResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from (select tb_user.*, tb_temp.feedback_id, product_id, feedback_context, feedback_image_id, feedback_image
          from (
                   select tb_feedback.*, tb_feedback_image.feedback_image_id, feedback_image
                   from tb_feedback
                            join tb_feedback_image on tb_feedback.feedback_id = tb_feedback_image.feedback_id)
                   as `tb_temp`
                   right join
               tb_user on tb_temp.user_id = tb_user.user_id) as `temp`
    where user_id = #{userId,jdbcType=INTEGER} ;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.UserExample" >
    delete from tb_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.User" >
    insert into tb_user (user_id, user_name, user_nike, 
      user_password, user_email, user_phone, 
      user_money, user_head_icon, user_default_address_id
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userNike,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{userMoney,jdbcType=REAL}, #{userHeadIcon,jdbcType=VARCHAR}, #{userDefaultAddressId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.User" >
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userNike != null" >
        user_nike,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userMoney != null" >
        user_money,
      </if>
      <if test="userHeadIcon != null" >
        user_head_icon,
      </if>
      <if test="userDefaultAddressId != null" >
        user_default_address_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNike != null" >
        #{userNike,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userMoney != null" >
        #{userMoney,jdbcType=REAL},
      </if>
      <if test="userHeadIcon != null" >
        #{userHeadIcon,jdbcType=VARCHAR},
      </if>
      <if test="userDefaultAddressId != null" >
        #{userDefaultAddressId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from tb_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userNike != null" >
        user_nike = #{record.userNike,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null" >
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userMoney != null" >
        user_money = #{record.userMoney,jdbcType=REAL},
      </if>
      <if test="record.userHeadIcon != null" >
        user_head_icon = #{record.userHeadIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.userDefaultAddressId != null" >
        user_default_address_id = #{record.userDefaultAddressId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_nike = #{record.userNike,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_money = #{record.userMoney,jdbcType=REAL},
      user_head_icon = #{record.userHeadIcon,jdbcType=VARCHAR},
      user_default_address_id = #{record.userDefaultAddressId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.User" >
    update tb_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNike != null" >
        user_nike = #{userNike,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userMoney != null" >
        user_money = #{userMoney,jdbcType=REAL},
      </if>
      <if test="userHeadIcon != null" >
        user_head_icon = #{userHeadIcon,jdbcType=VARCHAR},
      </if>
      <if test="userDefaultAddressId != null" >
        user_default_address_id = #{userDefaultAddressId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.User" >
    update tb_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_nike = #{userNike,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_money = #{userMoney,jdbcType=REAL},
      user_head_icon = #{userHeadIcon,jdbcType=VARCHAR},
      user_default_address_id = #{userDefaultAddressId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>