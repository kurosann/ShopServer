<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Product" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_type_id" property="productTypeId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="old_product_price" property="oldProductPrice" jdbcType="REAL" />
    <result column="new_product_price" property="newProductPrice" jdbcType="REAL" />
    <result column="product_spec" property="productSpec" jdbcType="VARCHAR" />
    <result column="product_size" property="productSize" jdbcType="VARCHAR" />
    <result column="product_flag" property="productFlag" jdbcType="INTEGER" />
    <result column="product_broad" property="productBroad" jdbcType="VARCHAR" />
    <result column="product_stock" property="productStock" jdbcType="INTEGER" />
    <result column="product_pic" property="productPic" jdbcType="VARCHAR" />
    <result column="product_remain_time" property="productRemainTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, product_type_id, product_name, old_product_price, new_product_price, 
    product_spec, product_size, product_flag, product_broad, product_stock, product_pic, 
    product_remain_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.ProductExample" >
    delete from tb_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Product" >
    insert into tb_product (product_id, product_type_id, product_name, 
      old_product_price, new_product_price, product_spec, 
      product_size, product_flag, product_broad, 
      product_stock, product_pic, product_remain_time
      )
    values (#{productId,jdbcType=INTEGER}, #{productTypeId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, 
      #{oldProductPrice,jdbcType=REAL}, #{newProductPrice,jdbcType=REAL}, #{productSpec,jdbcType=VARCHAR}, 
      #{productSize,jdbcType=VARCHAR}, #{productFlag,jdbcType=INTEGER}, #{productBroad,jdbcType=VARCHAR}, 
      #{productStock,jdbcType=INTEGER}, #{productPic,jdbcType=VARCHAR}, #{productRemainTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Product" >
    insert into tb_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productTypeId != null" >
        product_type_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="oldProductPrice != null" >
        old_product_price,
      </if>
      <if test="newProductPrice != null" >
        new_product_price,
      </if>
      <if test="productSpec != null" >
        product_spec,
      </if>
      <if test="productSize != null" >
        product_size,
      </if>
      <if test="productFlag != null" >
        product_flag,
      </if>
      <if test="productBroad != null" >
        product_broad,
      </if>
      <if test="productStock != null" >
        product_stock,
      </if>
      <if test="productPic != null" >
        product_pic,
      </if>
      <if test="productRemainTime != null" >
        product_remain_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productTypeId != null" >
        #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="oldProductPrice != null" >
        #{oldProductPrice,jdbcType=REAL},
      </if>
      <if test="newProductPrice != null" >
        #{newProductPrice,jdbcType=REAL},
      </if>
      <if test="productSpec != null" >
        #{productSpec,jdbcType=VARCHAR},
      </if>
      <if test="productSize != null" >
        #{productSize,jdbcType=VARCHAR},
      </if>
      <if test="productFlag != null" >
        #{productFlag,jdbcType=INTEGER},
      </if>
      <if test="productBroad != null" >
        #{productBroad,jdbcType=VARCHAR},
      </if>
      <if test="productStock != null" >
        #{productStock,jdbcType=INTEGER},
      </if>
      <if test="productPic != null" >
        #{productPic,jdbcType=VARCHAR},
      </if>
      <if test="productRemainTime != null" >
        #{productRemainTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from tb_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_product
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productTypeId != null" >
        product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.oldProductPrice != null" >
        old_product_price = #{record.oldProductPrice,jdbcType=REAL},
      </if>
      <if test="record.newProductPrice != null" >
        new_product_price = #{record.newProductPrice,jdbcType=REAL},
      </if>
      <if test="record.productSpec != null" >
        product_spec = #{record.productSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.productSize != null" >
        product_size = #{record.productSize,jdbcType=VARCHAR},
      </if>
      <if test="record.productFlag != null" >
        product_flag = #{record.productFlag,jdbcType=INTEGER},
      </if>
      <if test="record.productBroad != null" >
        product_broad = #{record.productBroad,jdbcType=VARCHAR},
      </if>
      <if test="record.productStock != null" >
        product_stock = #{record.productStock,jdbcType=INTEGER},
      </if>
      <if test="record.productPic != null" >
        product_pic = #{record.productPic,jdbcType=VARCHAR},
      </if>
      <if test="record.productRemainTime != null" >
        product_remain_time = #{record.productRemainTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_product
    set product_id = #{record.productId,jdbcType=INTEGER},
      product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      old_product_price = #{record.oldProductPrice,jdbcType=REAL},
      new_product_price = #{record.newProductPrice,jdbcType=REAL},
      product_spec = #{record.productSpec,jdbcType=VARCHAR},
      product_size = #{record.productSize,jdbcType=VARCHAR},
      product_flag = #{record.productFlag,jdbcType=INTEGER},
      product_broad = #{record.productBroad,jdbcType=VARCHAR},
      product_stock = #{record.productStock,jdbcType=INTEGER},
      product_pic = #{record.productPic,jdbcType=VARCHAR},
      product_remain_time = #{record.productRemainTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Product" >
    update tb_product
    <set >
      <if test="productTypeId != null" >
        product_type_id = #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="oldProductPrice != null" >
        old_product_price = #{oldProductPrice,jdbcType=REAL},
      </if>
      <if test="newProductPrice != null" >
        new_product_price = #{newProductPrice,jdbcType=REAL},
      </if>
      <if test="productSpec != null" >
        product_spec = #{productSpec,jdbcType=VARCHAR},
      </if>
      <if test="productSize != null" >
        product_size = #{productSize,jdbcType=VARCHAR},
      </if>
      <if test="productFlag != null" >
        product_flag = #{productFlag,jdbcType=INTEGER},
      </if>
      <if test="productBroad != null" >
        product_broad = #{productBroad,jdbcType=VARCHAR},
      </if>
      <if test="productStock != null" >
        product_stock = #{productStock,jdbcType=INTEGER},
      </if>
      <if test="productPic != null" >
        product_pic = #{productPic,jdbcType=VARCHAR},
      </if>
      <if test="productRemainTime != null" >
        product_remain_time = #{productRemainTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Product" >
    update tb_product
    set product_type_id = #{productTypeId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      old_product_price = #{oldProductPrice,jdbcType=REAL},
      new_product_price = #{newProductPrice,jdbcType=REAL},
      product_spec = #{productSpec,jdbcType=VARCHAR},
      product_size = #{productSize,jdbcType=VARCHAR},
      product_flag = #{productFlag,jdbcType=INTEGER},
      product_broad = #{productBroad,jdbcType=VARCHAR},
      product_stock = #{productStock,jdbcType=INTEGER},
      product_pic = #{productPic,jdbcType=VARCHAR},
      product_remain_time = #{productRemainTime,jdbcType=TIMESTAMP}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>